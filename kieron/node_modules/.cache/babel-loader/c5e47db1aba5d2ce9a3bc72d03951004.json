{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiero\\\\OneDrive\\\\Documents\\\\firebase\\\\src\\\\components\\\\google-drive\\\\AddFileButton.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { faFileUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { storage, database } from \"../../firebase\";\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport { ProgressBar, Toast } from \"react-bootstrap\";\nexport default function AddFileButton({\n  currentFolder\n}) {\n  const [uploadingFiles, setUploadingFiles] = useState([]);\n  const {\n    currentUser\n  } = useAuth();\n\n  function handleUpload(e) {\n    const file = e.target.files[0];\n    if (currentFolder == null || file == null) return;\n    const id = uuidV4();\n    setUploadingFiles(prevUploadingFiles => [...prevUploadingFiles, {\n      id: id,\n      name: file.name,\n      progress: 0,\n      error: false\n    }]);\n    const filePath = currentFolder === ROOT_FOLDER ? `${currentFolder.path.join(\"/\")}/${file.name}` : `${currentFolder.path.join(\"/\")}/${currentFolder.name}/${file.name}`;\n    const uploadTask = storage.ref(`/files/${currentUser.uid}/${filePath}`).put(file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes;\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.map(uploadFile => {\n          if (uploadFile.id === id) {\n            return { ...uploadFile,\n              progress: progress\n            };\n          }\n\n          return uploadFile;\n        });\n      });\n    }, () => {\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.map(uploadFile => {\n          if (uploadFile.id === id) {\n            return { ...uploadFile,\n              error: true\n            };\n          }\n\n          return uploadFile;\n        });\n      });\n    }, () => {\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.filter(uploadFile => {\n          return uploadFile.id !== id;\n        });\n      });\n      uploadTask.snapshot.ref.getDownloadURL().then(url => {\n        database.files.where(\"name\", \"==\", file.name).where(\"userId\", \"==\", currentUser.uid).where(\"folderId\", \"==\", currentFolder.id).get().then(existingFiles => {\n          const existingFile = existingFiles.docs[0];\n\n          if (existingFile) {\n            existingFile.ref.update({\n              url: url\n            });\n          } else {\n            database.files.add({\n              url: url,\n              name: file.name,\n              createdAt: database.getCurrentTimestamp(),\n              folderId: currentFolder.id,\n              userId: currentUser.uid\n            });\n          }\n        });\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-outline-success btn-xl m-0 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tippy, {\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \" Add a folder \")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleUpload,\n    style: {\n      opacity: 0,\n      position: \"absolute\",\n      left: \"-9999px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }))), uploadingFiles.length > 0 && ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: \"1rem\",\n      right: \"1rem\",\n      maxWidth: \"250px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, uploadingFiles.map(file => /*#__PURE__*/React.createElement(Toast, {\n    key: file.id,\n    onClose: () => {\n      setUploadingFiles(prevUploadingFiles => {\n        return prevUploadingFiles.filter(uploadFile => {\n          return uploadFile.id !== file.id;\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    closeButton: file.error,\n    className: \"text-truncate w-100 d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, file.name), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    animated: !file.error,\n    variant: file.error ? \"danger\" : \"primary\",\n    now: file.error ? 100 : file.progress * 100,\n    label: file.error ? \"Error\" : `${Math.round(file.progress * 100)}%`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }))))), document.body));\n}","map":{"version":3,"sources":["C:/Users/kiero/OneDrive/Documents/firebase/src/components/google-drive/AddFileButton.js"],"names":["React","useState","ReactDOM","faFileUpload","FontAwesomeIcon","useAuth","storage","database","ROOT_FOLDER","v4","uuidV4","ProgressBar","Toast","AddFileButton","currentFolder","uploadingFiles","setUploadingFiles","currentUser","handleUpload","e","file","target","files","id","prevUploadingFiles","name","progress","error","filePath","path","join","uploadTask","ref","uid","put","on","snapshot","bytesTransferred","totalBytes","map","uploadFile","filter","getDownloadURL","then","url","where","get","existingFiles","existingFile","docs","update","add","createdAt","getCurrentTimestamp","folderId","userId","opacity","position","left","length","createPortal","bottom","right","maxWidth","Math","round","document","body"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { faFileUpload } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { storage, database } from \"../../firebase\"\r\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\"\r\nimport { v4 as uuidV4 } from \"uuid\"\r\nimport { ProgressBar, Toast } from \"react-bootstrap\"\r\n\r\nexport default function AddFileButton({ currentFolder }) {\r\n  const [uploadingFiles, setUploadingFiles] = useState([])\r\n  const { currentUser } = useAuth()\r\n\r\n  function handleUpload(e) {\r\n    const file = e.target.files[0]\r\n    if (currentFolder == null || file == null) return\r\n\r\n    const id = uuidV4()\r\n    setUploadingFiles(prevUploadingFiles => [\r\n      ...prevUploadingFiles,\r\n      { id: id, name: file.name, progress: 0, error: false },\r\n    ])\r\n    const filePath =\r\n      currentFolder === ROOT_FOLDER\r\n        ? `${currentFolder.path.join(\"/\")}/${file.name}`\r\n        : `${currentFolder.path.join(\"/\")}/${currentFolder.name}/${file.name}`\r\n\r\n    const uploadTask = storage\r\n      .ref(`/files/${currentUser.uid}/${filePath}`)\r\n      .put(file)\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes\r\n        setUploadingFiles(prevUploadingFiles => {\r\n          return prevUploadingFiles.map(uploadFile => {\r\n            if (uploadFile.id === id) {\r\n              return { ...uploadFile, progress: progress }\r\n            }\r\n\r\n            return uploadFile\r\n          })\r\n        })\r\n      },\r\n      () => {\r\n        setUploadingFiles(prevUploadingFiles => {\r\n          return prevUploadingFiles.map(uploadFile => {\r\n            if (uploadFile.id === id) {\r\n              return { ...uploadFile, error: true }\r\n            }\r\n            return uploadFile\r\n          })\r\n        })\r\n      },\r\n      () => {\r\n        setUploadingFiles(prevUploadingFiles => {\r\n          return prevUploadingFiles.filter(uploadFile => {\r\n            return uploadFile.id !== id\r\n          })\r\n        })\r\n\r\n        uploadTask.snapshot.ref.getDownloadURL().then(url => {\r\n          database.files\r\n            .where(\"name\", \"==\", file.name)\r\n            .where(\"userId\", \"==\", currentUser.uid)\r\n            .where(\"folderId\", \"==\", currentFolder.id)\r\n            .get()\r\n            .then(existingFiles => {\r\n              const existingFile = existingFiles.docs[0]\r\n              if (existingFile) {\r\n                existingFile.ref.update({ url: url })\r\n              } else {\r\n                database.files.add({\r\n                  url: url,\r\n                  name: file.name,\r\n                  createdAt: database.getCurrentTimestamp(),\r\n                  folderId: currentFolder.id,\r\n                  userId: currentUser.uid,\r\n                })\r\n              }\r\n            })\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label className=\"btn btn-outline-success btn-xl m-0 mr-2\">\r\n      <Tippy content={<div>\r\n        <h7> Add a folder </h7>\r\n        </div>}>\r\n        <FontAwesomeIcon icon={faFileUpload} />\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleUpload}\r\n          style={{ opacity: 0, position: \"absolute\", left: \"-9999px\" }}\r\n        />\r\n        </Tippy>\r\n      </label>\r\n      {uploadingFiles.length > 0 &&\r\n        ReactDOM.createPortal(\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: \"1rem\",\r\n              right: \"1rem\",\r\n              maxWidth: \"250px\",\r\n            }}\r\n          >\r\n            {uploadingFiles.map(file => (\r\n              <Toast\r\n                key={file.id}\r\n                onClose={() => {\r\n                  setUploadingFiles(prevUploadingFiles => {\r\n                    return prevUploadingFiles.filter(uploadFile => {\r\n                      return uploadFile.id !== file.id\r\n                    })\r\n                  })\r\n                }}\r\n              >\r\n                <Toast.Header\r\n                  closeButton={file.error}\r\n                  className=\"text-truncate w-100 d-block\"\r\n                >\r\n                  {file.name}\r\n                </Toast.Header>\r\n                <Toast.Body>\r\n                  <ProgressBar\r\n                    animated={!file.error}\r\n                    variant={file.error ? \"danger\" : \"primary\"}\r\n                    now={file.error ? 100 : file.progress * 100}\r\n                    label={\r\n                      file.error\r\n                        ? \"Error\"\r\n                        : `${Math.round(file.progress * 100)}%`\r\n                    }\r\n                  />\r\n                </Toast.Body>\r\n              </Toast>\r\n            ))}\r\n          </div>,\r\n          document.body\r\n        )}\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}